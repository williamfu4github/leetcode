/*
Solution 543 - Diameter of Binary Tree
O(n) time
O(logn) space for balanced tree
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

class Solution {
private:
    int maxDiameter;
    
private:
    int getMaxPathToLeaf(TreeNode* current) {
        if (current == NULL) {
            return 0;
        }
        else {
            int leftMax = this->getMaxPathToLeaf(current->left);
            int rightMax = this->getMaxPathToLeaf(current->right);
            maxDiameter = std::max(maxDiameter, leftMax + rightMax + 1);
            return (std::max(leftMax, rightMax) + 1);
    }
    
public:
    int diameterOfBinaryTree(TreeNode* root) {
        maxDiameter = 0;
        this->getMaxPathToLeaf(root);
        return ((root == NULL) ? 0 : maxDiameter - 1);
    }
};

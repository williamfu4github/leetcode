/*
Solution 680 - Valid Palindrome II
when encounter mismatch, try both possibilities of removal
O(n) time
O(1) space
*/

class Solution {
private:
    bool isPalindrome(const string& s, int i, int j) {
        while (i < j) {
            if (s[i] == s[j]) {
                i ++;
                j --;
            }
            else {
                return false;
            }
        }
        return true;
    }
    
public:
    bool validPalindrome(const string& s) {
        int sSize = static_cast<int>(s.size());
        int i = 0;
        int j = sSize - 1;
        while (i < j) {
            if (s[i] == s[j]) {
                i ++;
                j --;
            }
            else {
                return (this->isPalindrome(s, i + 1, j) || this->isPalindrome(s, i, j - 1));
            }
        }
        return true;
    }
};

/*
Solution 443 - String Compression
O(n) time
O(logn) space, for storing countString, otherwise O(1) space
can eliminate countString by appending mod10 result digits, then reverse
*/

class Solution {
private:
    void encode(vector<char>& chars, int& i, char letter, int count) {
        chars[i] = letter;
        i ++;
        if (count > 1) {
            string countString = std::to_string(count);
            for (char c : countString) {
                chars[i] = c;
                i ++;
            }
        }
    }
    
public:
    int compress(vector<char>& chars) {
        int charsSize = static_cast<int>(chars.size());
        int i = 0;
        int count = 1;
        for (int j = 1; j < charsSize; j ++) {
            if (chars[j] == chars[j - 1]) {
                count ++;
            }
            else {
                this->encode(chars, i, chars[j - 1], count);
                count = 1;
            }
        }
        this->encode(chars, i, chars.back(), count);
        return i;
    }
};
